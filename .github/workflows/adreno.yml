name: Extract and Release

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: "ROM_URL"
        default: "https://pixeldrain.com/api/file/WdArNVpq"
      DEVICE_NAME:
        description: "DEVICE_NAME"
        default: "spes"
      EXTRACTED_FILES:
        description: "EXTRACTED_FILES"
        default: "boot.img, dtbo.img, product.img, system.img, system_ext.img"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Download file
        run: aria2c -s 16 -x 16 ${{ github.event.inputs.ROM_URL }}
      - name: Extract Payload
        continue-on-error: true
        run: |
          chmod u+x .github/scripts/android-ota-extractor
          .github/scripts/android-ota-extractor *.zip
          echo -e "\n\e[31mDeleting files larger than 2GB...\e[0m"
          find . -maxdepth 1 -type f -size +2G -print -delete
          echo "ZIP_FILE=$(basename -a *.zip)" >> $GITHUB_ENV
          echo "ZIP_FILE_SHA256=$(sha256sum *.zip | cut -d' ' -f1)" >> $GITHUB_ENV
      - name: Mount vendor.img
        run: |
          mkdir vendor
          sudo mount -o ro vendor.img vendor
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: adreno
          path: vendor/lib64/hw/vulkan.adreno.so
